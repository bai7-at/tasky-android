package defpackage;

import android.content.Context;
import com.amazonaws.services.s3.internal.Constants;
import com.amazonaws.services.s3.internal.crypto.JceEncryptionConstants;
import com.comscore.streaming.ContentDeliveryAdvertisementCapability;
import com.comscore.streaming.ContentFeedType;
import com.comscore.streaming.WindowState;
import com.comscore.util.crashreport.CrashReportManager;
import com.comscore.util.log.LogLevel;
import com.nytimes.android.abra.models.AbraPackageKt;
import io.embrace.android.embracesdk.config.behavior.BackgroundActivityBehavior;
import io.embrace.android.embracesdk.config.behavior.NetworkBehavior;
import java.util.concurrent.TimeUnit;
import org.threeten.bp.Year;

/* loaded from: classes3.dex */
public abstract class fpe {
    public static final xie A;
    public static final xie A0;
    public static final xie A1;
    public static final xie A2;
    public static final xie A3;
    public static final xie A4;
    public static final xie A5;
    public static final xie A6;
    public static final xie A7;
    public static final xie A8;
    public static final xie B;
    public static final xie B0;
    public static final xie B1;
    public static final xie B2;
    public static final xie B3;
    public static final xie B4;
    public static final xie B5;
    public static final xie B6;
    public static final xie B7;
    public static final xie B8;
    public static final xie C;
    public static final xie C0;
    public static final xie C1;
    public static final xie C2;
    public static final xie C3;
    public static final xie C4;
    public static final xie C5;
    public static final xie C6;
    public static final xie C7;
    public static final xie C8;
    public static final xie D;
    public static final xie D0;
    public static final xie D1;
    public static final xie D2;
    public static final xie D3;
    public static final xie D4;
    public static final xie D5;
    public static final xie D6;
    public static final xie D7;
    public static final xie D8;
    public static final xie E;
    public static final xie E0;
    public static final xie E1;
    public static final xie E2;
    public static final xie E3;
    public static final xie E4;
    public static final xie E5;
    public static final xie E6;
    public static final xie E7;
    public static final xie E8;
    public static final xie F;
    public static final xie F0;
    public static final xie F1;
    public static final xie F2;
    public static final xie F3;
    public static final xie F4;
    public static final xie F5;
    public static final xie F6;
    public static final xie F7;
    public static final xie F8;
    public static final xie G;
    public static final xie G0;
    public static final xie G1;
    public static final xie G2;
    public static final xie G3;
    public static final xie G4;
    public static final xie G5;
    public static final xie G6;
    public static final xie G7;
    public static final xie G8;
    public static final xie H;
    public static final xie H0;
    public static final xie H1;
    public static final xie H2;
    public static final xie H3;
    public static final xie H4;
    public static final xie H5;
    public static final xie H6;
    public static final xie H7;
    public static final xie H8;
    public static final xie I;
    public static final xie I0;
    public static final xie I1;
    public static final xie I2;
    public static final xie I3;
    public static final xie I4;
    public static final xie I5;
    public static final xie I6;
    public static final xie I7;
    public static final xie I8;
    public static final xie J;
    public static final xie J0;
    public static final xie J1;
    public static final xie J2;
    public static final xie J3;
    public static final xie J4;
    public static final xie J5;
    public static final xie J6;
    public static final xie J7;
    public static final xie J8;
    public static final xie K;
    public static final xie K0;
    public static final xie K1;
    public static final xie K2;
    public static final xie K3;
    public static final xie K4;
    public static final xie K5;
    public static final xie K6;
    public static final xie K7;
    public static final xie K8;
    public static final xie L;
    public static final xie L0;
    public static final xie L1;
    public static final xie L2;
    public static final xie L3;
    public static final xie L4;
    public static final xie L5;
    public static final xie L6;
    public static final xie L7;
    public static final xie L8;
    public static final xie M;
    public static final xie M0;
    public static final xie M1;
    public static final xie M2;
    public static final xie M3;
    public static final xie M4;
    public static final xie M5;
    public static final xie M6;
    public static final xie M7;
    public static final xie M8;
    public static final xie N;
    public static final xie N0;
    public static final xie N1;
    public static final xie N2;
    public static final xie N3;
    public static final xie N4;
    public static final xie N5;
    public static final xie N6;
    public static final xie N7;
    public static final xie N8;
    public static final xie O;
    public static final xie O0;
    public static final xie O1;
    public static final xie O2;
    public static final xie O3;
    public static final xie O4;
    public static final xie O5;
    public static final xie O6;
    public static final xie O7;
    public static final xie O8;
    public static final xie P;
    public static final xie P0;
    public static final xie P1;
    public static final xie P2;
    public static final xie P3;
    public static final xie P4;
    public static final xie P5;
    public static final xie P6;
    public static final xie P7;
    public static final xie P8;
    public static final xie Q;
    public static final xie Q0;
    public static final xie Q1;
    public static final xie Q2;
    public static final xie Q3;
    public static final xie Q4;
    public static final xie Q5;
    public static final xie Q6;
    public static final xie Q7;
    public static final xie Q8;
    public static final xie R;
    public static final xie R0;
    public static final xie R1;
    public static final xie R2;
    public static final xie R3;
    public static final xie R4;
    public static final xie R5;
    public static final xie R6;
    public static final xie R7;
    public static final xie R8;
    public static final xie S;
    public static final xie S0;
    public static final xie S1;
    public static final xie S2;
    public static final xie S3;
    public static final xie S4;
    public static final xie S5;
    public static final xie S6;
    public static final xie S7;
    public static final xie S8;
    public static final xie T;
    public static final xie T0;
    public static final xie T1;
    public static final xie T2;
    public static final xie T3;
    public static final xie T4;
    public static final xie T5;
    public static final xie T6;
    public static final xie T7;
    public static final xie T8;
    public static final xie U;
    public static final xie U0;
    public static final xie U1;
    public static final xie U2;
    public static final xie U3;
    public static final xie U4;
    public static final xie U5;
    public static final xie U6;
    public static final xie U7;
    public static final xie U8;
    public static final xie V;
    public static final xie V0;
    public static final xie V1;
    public static final xie V2;
    public static final xie V3;
    public static final xie V4;
    public static final xie V5;
    public static final xie V6;
    public static final xie V7;
    public static final xie W;
    public static final xie W0;
    public static final xie W1;
    public static final xie W2;
    public static final xie W3;
    public static final xie W4;
    public static final xie W5;
    public static final xie W6;
    public static final xie W7;
    public static final xie X;
    public static final xie X0;
    public static final xie X1;
    public static final xie X2;
    public static final xie X3;
    public static final xie X4;
    public static final xie X5;
    public static final xie X6;
    public static final xie X7;
    public static final xie Y;
    public static final xie Y0;
    public static final xie Y1;
    public static final xie Y2;
    public static final xie Y3;
    public static final xie Y4;
    public static final xie Y5;
    public static final xie Y6;
    public static final xie Y7;
    public static final xie Z;
    public static final xie Z0;
    public static final xie Z1;
    public static final xie Z2;
    public static final xie Z3;
    public static final xie Z4;
    public static final xie Z5;
    public static final xie Z6;
    public static final xie Z7;
    public static final xie a0;
    public static final xie a1;
    public static final xie a2;
    public static final xie a3;
    public static final xie a4;
    public static final xie a5;
    public static final xie a6;
    public static final xie a7;
    public static final xie a8;
    public static final xie b0;
    public static final xie b1;
    public static final xie b2;
    public static final xie b3;
    public static final xie b4;
    public static final xie b5;
    public static final xie b6;
    public static final xie b7;
    public static final xie b8;
    public static final xie c0;
    public static final xie c1;
    public static final jre c2;
    public static final xie c3;
    public static final xie c4;
    public static final xie c5;
    public static final xie c6;
    public static final xie c7;
    public static final xie c8;
    public static final xie d0;
    public static final xie d1;
    public static final xie d2;
    public static final xie d3;
    public static final xie d4;
    public static final xie d5;
    public static final xie d6;
    public static final xie d7;
    public static final xie d8;
    public static final xie e0;
    public static final xie e1;
    public static final xie e2;
    public static final xie e3;
    public static final xie e4;
    public static final xie e5;
    public static final xie e6;
    public static final xie e7;
    public static final xie e8;
    public static final xie f0;
    public static final xie f1;
    public static final xie f2;
    public static final xie f3;
    public static final xie f4;
    public static final xie f5;
    public static final xie f6;
    public static final xie f7;
    public static final xie f8;
    public static final xie g0;
    public static final xie g1;
    public static final xie g2;
    public static final xie g3;
    public static final xie g4;
    public static final xie g5;
    public static final xie g6;
    public static final xie g7;
    public static final xie g8;
    public static final xie h0;
    public static final xie h1;
    public static final xie h2;
    public static final xie h3;
    public static final xie h4;
    public static final xie h5;
    public static final xie h6;
    public static final xie h7;
    public static final xie h8;
    public static final xie i0;
    public static final xie i1;
    public static final xie i2;
    public static final xie i3;
    public static final xie i4;
    public static final xie i5;
    public static final xie i6;
    public static final xie i7;
    public static final xie i8;
    public static final xie j0;
    public static final xie j1;
    public static final xie j2;
    public static final xie j3;
    public static final xie j4;
    public static final xie j5;
    public static final xie j6;
    public static final xie j7;
    public static final xie j8;
    public static final xie k0;
    public static final xie k1;
    public static final xie k2;
    public static final xie k3;
    public static final xie k4;
    public static final xie k5;
    public static final xie k6;
    public static final xie k7;
    public static final xie k8;
    public static final xie l0;
    public static final xie l1;
    public static final xie l2;
    public static final xie l3;
    public static final xie l4;
    public static final xie l5;
    public static final xie l6;
    public static final xie l7;
    public static final xie l8;
    public static final xie m;
    public static final xie m0;
    public static final xie m1;
    public static final xie m2;
    public static final xie m3;
    public static final xie m4;
    public static final xie m5;
    public static final xie m6;
    public static final xie m7;
    public static final xie m8;
    public static final xie n;
    public static final xie n0;
    public static final xie n1;
    public static final xie n2;
    public static final xie n3;
    public static final xie n4;
    public static final xie n5;
    public static final xie n6;
    public static final xie n7;
    public static final xie n8;
    public static final xie o;
    public static final xie o0;
    public static final xie o1;
    public static final xie o2;
    public static final xie o3;
    public static final xie o4;
    public static final xie o5;
    public static final xie o6;
    public static final xie o7;
    public static final xie o8;
    public static final xie p;
    public static final xie p0;
    public static final xie p1;
    public static final xie p2;
    public static final xie p3;
    public static final xie p4;
    public static final xie p5;
    public static final xie p6;
    public static final xie p7;
    public static final xie p8;
    public static final xie q;
    public static final xie q0;
    public static final xie q1;
    public static final xie q2;
    public static final xie q3;
    public static final xie q4;
    public static final xie q5;
    public static final xie q6;
    public static final xie q7;
    public static final xie q8;
    public static final xie r;
    public static final xie r0;
    public static final xie r1;
    public static final xie r2;
    public static final xie r3;
    public static final xie r4;
    public static final xie r5;
    public static final xie r6;
    public static final xie r7;
    public static final xie r8;
    public static final xie s;
    public static final xie s0;
    public static final xie s1;
    public static final xie s2;
    public static final xie s3;
    public static final xie s4;
    public static final xie s5;
    public static final xie s6;
    public static final xie s7;
    public static final xie s8;
    public static final xie t;
    public static final xie t0;
    public static final xie t1;
    public static final xie t2;
    public static final xie t3;
    public static final xie t4;
    public static final xie t5;
    public static final xie t6;
    public static final xie t7;
    public static final xie t8;
    public static final xie u;
    public static final xie u0;
    public static final xie u1;
    public static final xie u2;
    public static final xie u3;
    public static final xie u4;
    public static final xie u5;
    public static final xie u6;
    public static final xie u7;
    public static final xie u8;
    public static final xie v;
    public static final xie v0;
    public static final xie v1;
    public static final xie v2;
    public static final xie v3;
    public static final xie v4;
    public static final xie v5;
    public static final xie v6;
    public static final xie v7;
    public static final xie v8;
    public static final xie w;
    public static final xie w0;
    public static final xie w1;
    public static final xie w2;
    public static final xie w3;
    public static final xie w4;
    public static final xie w5;
    public static final xie w6;
    public static final xie w7;
    public static final xie w8;
    public static final xie x;
    public static final xie x0;
    public static final xie x1;
    public static final xie x2;
    public static final xie x3;
    public static final xie x4;
    public static final xie x5;
    public static final xie x6;
    public static final xie x7;
    public static final xie x8;
    public static final xie y;
    public static final xie y0;
    public static final xie y1;
    public static final xie y2;
    public static final xie y3;
    public static final xie y4;
    public static final xie y5;
    public static final xie y6;
    public static final xie y7;
    public static final xie y8;
    public static final xie z;
    public static final xie z0;
    public static final xie z1;
    public static final xie z2;
    public static final xie z3;
    public static final xie z4;
    public static final xie z5;
    public static final xie z6;
    public static final xie z7;
    public static final xie z8;
    public static final xie a = xie.i(1, "gads:sdk_core_location:client:html", "https://googleads.g.doubleclick.net/mads/static/mad/sdk/native/production/sdk-core-v40-impl.html");
    public static final xie b = xie.i(1, "gads:active_view_location:html", "https://googleads.g.doubleclick.net/mads/static/mad/sdk/native/production/sdk-core-v40-impl.html");
    public static final jre c = nte.d;
    public static final xie d = xie.f(1, "gads:http_url_connection_factory:timeout_millis", Constants.MAXIMUM_UPLOAD_PARTS);
    public static final xie e = xie.i(1, "gads:video_exo_player:version", "3");
    public static final xie f = xie.f(1, "gads:video_exo_player:connect_timeout", 8000);
    public static final xie g = xie.f(1, "gads:video_exo_player:read_timeout", 8000);
    public static final xie h = xie.f(1, "gads:video_exo_player:loading_check_interval", Constants.MB);
    public static final xie i = xie.f(1, "gads:video_exo_player:exo_player_precache_limit", Integer.MAX_VALUE);
    public static final xie j = xie.f(1, "gads:video_exo_player:byte_buffer_precache_limit", Integer.MAX_VALUE);
    public static final xie k = xie.f(1, "gads:video_exo_player_socket_receive_buffer_size", 0);
    public static final xie l = xie.f(1, "gads:video_exo_player:min_retry_count", -1);

    static {
        Boolean bool = Boolean.TRUE;
        m = xie.h(1, "gads:video_exo_player:fmp4_extractor_enabled", bool);
        Boolean bool2 = Boolean.FALSE;
        n = xie.h(1, "gads:video_exo_player:use_play_back_info_for_should_start_play_back", bool2);
        o = xie.h(1, "gads:video_exo_player:treat_load_exception_as_non_fatal", bool);
        p = xie.h(1, "gads:video_exo_player:wait_with_timeout", bool2);
        q = xie.f(1, "gads:video_exo_player:wait_timeout_ms", 500);
        r = xie.h(1, "gads:null_key_bundle_to_json:enabled", bool2);
        s = xie.f(1, "gads:video_stream_cache:limit_count", 5);
        t = xie.f(1, "gads:video_stream_cache:limit_space", 8388608);
        u = xie.f(1, "gads:video_stream_exo_cache:buffer_size", 8388608);
        v = xie.g(1, "gads:video_stream_cache:limit_time_sec", 300L);
        w = xie.g(1, "gads:video_stream_cache:notify_interval_millis", 125L);
        x = xie.f(1, "gads:video_stream_cache:connect_timeout_millis", Constants.MAXIMUM_UPLOAD_PARTS);
        y = xie.i(1, "gads:video:metric_frame_hash_times", "");
        z = xie.g(1, "gads:video:metric_frame_hash_time_leniency", 500L);
        A = xie.h(1, "gads:video:force_watermark", bool2);
        B = xie.g(1, "gads:video:surface_update_min_spacing_ms", 1000L);
        C = xie.h(1, "gads:video:spinner:enabled", bool2);
        D = xie.h(1, "gads:video:shutter:enabled", bool2);
        E = xie.f(1, "gads:video:spinner:scale", 4);
        F = xie.g(1, "gads:video:spinner:jank_threshold_ms", 50L);
        G = xie.h(1, "gads:video:aggressive_media_codec_release", bool2);
        H = xie.h(1, "gads:memory_bundle:debug_info", bool2);
        I = xie.i(1, "gads:video:codec_query_mime_types", "");
        J = xie.f(1, "gads:video:codec_query_minimum_version", 16);
        K = xie.i(1, "gad:mraid:url_banner", "https://googleads.g.doubleclick.net/mads/static/mad/sdk/native/production/mraid/v3/mraid_app_banner.js");
        L = xie.i(1, "gad:mraid:url_expanded_banner", "https://googleads.g.doubleclick.net/mads/static/mad/sdk/native/production/mraid/v3/mraid_app_expanded_banner.js");
        M = xie.i(1, "gad:mraid:url_interstitial", "https://googleads.g.doubleclick.net/mads/static/mad/sdk/native/production/mraid/v3/mraid_app_interstitial.js");
        N = xie.i(1, "gad:mraid:version", "3.0");
        O = xie.h(1, "gads:mraid:expanded_interstitial_fix", bool2);
        P = xie.h(1, "gads:mraid:initial_size_fallback", bool2);
        Q = xie.f(1, "gads:content_vertical_fingerprint_number", 100);
        R = xie.f(1, "gads:content_vertical_fingerprint_bits", 23);
        S = xie.f(1, "gads:content_vertical_fingerprint_ngram", 3);
        T = xie.i(1, "gads:content_fetch_view_tag_id", "googlebot");
        U = xie.i(1, "gads:content_fetch_exclude_view_tag", "none");
        V = xie.h(1, "gads:content_fetch_disable_get_title_from_webview", bool2);
        W = xie.h(1, "gads:content_fetch_enable_new_content_score", bool2);
        X = xie.h(1, "gads:content_fetch_enable_serve_once", bool2);
        Y = xie.h(1, "gads:sai:enabled", bool);
        Z = xie.i(1, "gads:sai:click_ping_schema_v2", "^[^?]*(/aclk\\?|/pcs/click\\?).*");
        a0 = xie.i(1, "gads:sai:impression_ping_schema_v2", "^[^?]*(/adview|/pcs/view).*");
        b0 = xie.h(1, "gads:sai:using_macro:enabled", bool2);
        c0 = xie.i(1, "gads:sai:ad_event_id_macro_name", "[gw_fbsaeid]");
        d0 = xie.g(1, "gads:sai:timeout_ms", -1L);
        e0 = xie.f(1, "gads:sai:scion_thread_pool_size", 5);
        f0 = xie.h(1, "gads:sai:app_measurement_enabled3", bool2);
        g0 = xie.f(1, "gads:sai:app_measurement_min_client_dynamite_version", 20290);
        h0 = xie.h(1, "gads:sai:force_through_reflection", bool);
        i0 = xie.h(1, "gads:sai:gmscore_availability_check_disabled", bool2);
        j0 = xie.h(1, "gads:sai:logging_disabled_for_drx", bool2);
        k0 = xie.h(1, "gads:sai:app_measurement_npa_enabled", bool2);
        l0 = xie.h(1, "gads:idless:idless_disables_attestation", bool);
        m0 = xie.h(1, "gads:idless:app_measurement_idless_enabled", bool);
        n0 = xie.h(1, "gads:sai:server_side_npa:disable_writing", bool2);
        o0 = xie.h(1, "gads:sai:server_side_npa:enabled", bool2);
        p0 = xie.g(1, "gads:sai:server_side_npa:ttl", TimeUnit.DAYS.toMillis(90L));
        q0 = xie.i(1, "gads:sai:server_side_npa:shared_preference_key_list", "{  \"__default__\": [    \"IABTCF_TCString\"  ],  \"mobileads_consent\": [    \"consent_string\"  ]}");
        r0 = xie.h(1, "gads:idless:internal_state_enabled", bool);
        s0 = xie.h(1, "gads:idless:idless_disables_offline_ads_signalling", bool);
        t0 = xie.h(1, "gads:custom_idless:enabled", bool2);
        u0 = xie.i(1, "gads:idless:cookie_modification", "=; Max-Age=-1; path=/; domain=.doubleclick.net");
        v0 = xie.h(1, "gads:idless_native_check:disabled", bool2);
        w0 = xie.h(1, "gads:tfcd_deny_ad_storage:enabled", bool2);
        x0 = xie.h(1, "gads:tfua_deny_ad_storage:enabled", bool2);
        y0 = xie.h(1, "gads:interstitial:app_must_be_foreground:enabled", bool2);
        z0 = xie.h(1, "gads:interstitial:foreground_report:enabled", bool2);
        A0 = xie.h(1, "gads:interstitial:default_immersive", bool2);
        B0 = xie.f(1, "gads:show_interstitial_with_context:min_version", 204890000);
        C0 = xie.h(1, "gads:interstitial:ad_overlay_omit_ad_html", bool2);
        D0 = xie.h(1, "gads:webview:error_web_response:enabled", bool2);
        E0 = xie.h(1, "gads:webview:set_fixed_text_zoom", bool);
        F0 = xie.h(1, "gads:webviewgone:kill_process:enabled", bool2);
        G0 = xie.h(1, "gads:webviewgone:new_onshow:enabled", bool2);
        H0 = xie.i(1, "gads:webview_cookie_url", "https://googleads.g.doubleclick.net");
        I0 = xie.h(1, "gads:webview_cookie_filter:enabled", bool2);
        J0 = xie.h(1, "gads:new_rewarded_ad:enabled", bool);
        K0 = xie.h(1, "gads:rewarded:adapter_initialization_enabled", bool2);
        L0 = xie.h(1, "gads:rewarded:ad_metadata_enabled", bool2);
        M0 = xie.g(1, "gads:app_activity_tracker:notify_background_listeners_delay_ms", 500L);
        N0 = xie.g(1, "gads:app_activity_tracker:app_session_timeout_ms", TimeUnit.MINUTES.toMillis(5L));
        O0 = xie.h(1, "gads:adid_values_in_adrequest:enabled", bool2);
        P0 = xie.g(1, "gads:adid_values_in_adrequest:timeout", 2000L);
        Q0 = xie.h(1, "gads:disable_adid_values_in_ms", bool2);
        R0 = xie.g(1, "gads:ad_overlay:delay_page_close_timeout_ms", BackgroundActivityBehavior.MIN_BACKGROUND_ACTIVITY_DURATION_DEFAULT);
        S0 = xie.h(1, "gads:custom_close_blocking:enabled", bool2);
        T0 = xie.h(1, "gads:disabling_closable_area:enabled", bool2);
        U0 = xie.h(1, "gads:force_top_right_close_button:enabled", bool2);
        V0 = xie.i(1, "gads:close_button_asset_name", "default");
        W0 = xie.g(1, "gads:close_button_fade_in_duration_ms", 0L);
        X0 = xie.h(1, "gads:disable_click_during_fade_in", bool2);
        Y0 = xie.h(1, "gads:use_system_ui_for_fullscreen:enabled", bool2);
        Z0 = xie.h(1, "gads:ad_overlay:collect_cutout_info:enabled", bool2);
        a1 = xie.f(1, "gads:banner_refresh_time:seconds", 60);
        b1 = xie.h(1, "gads:server_transaction_for_banner_refresh:enabled", bool2);
        c1 = xie.i(1, "gads:spherical_video:vertex_shader", "");
        d1 = xie.i(1, "gads:spherical_video:fragment_shader", "");
        e1 = xie.h(1, "gads:include_local_global_rectangles", bool2);
        f1 = xie.g(1, "gads:position_watcher:throttle_ms", 200L);
        g1 = xie.g(1, "gads:position_watcher:scroll_aware_throttle_ms", 33L);
        h1 = xie.h(1, "gads:position_watcher:enable_scroll_aware_ads", bool2);
        i1 = xie.h(1, "gads:position_watcher:send_scroll_data", bool2);
        j1 = xie.h(1, "gads:gen204_signals:enabled", bool2);
        k1 = xie.i(1, "gads:logged_adapter_version_classes", "");
        l1 = xie.g(1, "gads:rtb_v1_1:signal_timeout_ms", 1000L);
        m1 = xie.i(1, "gads:rtb_logging:regex", "(?!)");
        n1 = xie.h(1, "gads:include_failure_to_instantiate_adapter:enabled", bool2);
        o1 = xie.h(1, "gads:presentation_error:urls_enabled", bool);
        p1 = xie.h(1, "gads:rtb_interstitial:use_fullscreen_monitor", bool);
        q1 = xie.h(1, "gads:native_required_assets:enabled", bool2);
        r1 = xie.h(1, "gads:native_required_assets:check_inner_mediaview:enabled", bool);
        s1 = xie.h(1, "gads:include_timeout_in_rtb_signals:enabled", bool2);
        t1 = xie.h(1, "gads:include_signal_error_code_in_rtb_signals:enabled", bool2);
        u1 = xie.h(1, "gads:include_adapter_error_code_in_ans:enabled", bool2);
        v1 = xie.f(1, "gads:native_ad_options_rtb:min_version", 204890000);
        w1 = xie.h(1, "gads:track_view_next_runloop:enabled", bool2);
        x1 = xie.h(1, "gads:synchronize_measurement_listener:enabled", bool2);
        y1 = xie.h(1, "gads:native_required_assets:viewability:enabled", bool2);
        z1 = xie.h(1, "gads:signal_adapters:enabled", bool2);
        A1 = xie.f(1, "gads:adapter_initialization:min_sdk_version", 15301000);
        B1 = xie.g(1, "gads:adapter_initialization:timeout", 30L);
        C1 = xie.g(1, "gads:adapter_initialization:cld_timeout", 10L);
        D1 = xie.h(1, "gads:additional_video_csi:enabled", bool);
        E1 = xie.h(1, "gads:using_official_simple_exoplayer:enabled", bool2);
        F1 = xie.h(1, "gads:multiple_video_playback:enabled", bool);
        G1 = xie.h(1, "gads:pause_time_update_when_video_completed:enabled", bool2);
        H1 = xie.h(1, "gads:video:use_range_http_data_source", bool2);
        I1 = xie.g(1, "gads:video:range_http_data_source_high_water_mark", 614400L);
        J1 = xie.g(1, "gads:video:range_http_data_source_low_water_mark", 102400L);
        K1 = xie.h(1, "gads:run_exoplayer_video_stream_task_in_ui_thread:enabled", bool);
        L1 = xie.h(1, "gads:csi:enabled_per_sampling", bool2);
        M1 = xie.h(1, "gads:always_set_transfer_listener:enabled", bool2);
        N1 = xie.h(1, "gads:initialization_csi:enabled", bool2);
        O1 = xie.h(1, "gads:csi:enable_csi_latency_reporting", bool2);
        P1 = xie.h(1, "gads:msa:experiments:enabled", bool2);
        Q1 = xie.h(1, "gads:msa:experiments:ps:enabled", bool);
        R1 = xie.h(1, "gads:msa:experiments:fb:enabled", bool);
        S1 = xie.h(1, "gads:msa:experiments:ps:er", bool);
        T1 = xie.f(1, "gads:gestures:a2:enabled", 0);
        U1 = xie.h(1, "gads:msa:experiments:a2", bool2);
        V1 = xie.h(1, "gads:msa:experiments:log", bool2);
        W1 = xie.h(1, "gads:msa:experiments:vfb", bool);
        X1 = xie.h(1, "gads:msa:experiments:incapi:enabled", bool);
        Y1 = xie.h(1, "gads:msa:experiments:incapigass:enabled", bool2);
        Z1 = xie.i(1, "gads:msa:experiments:incapi:trusted_cert", "308204433082032ba003020102020900c2e08746644a308d300d06092a864886f70d01010405003074310b3009060355040613025553311330110603550408130a43616c69666f726e6961311630140603550407130d4d6f756e7461696e205669657731143012060355040a130b476f6f676c6520496e632e3110300e060355040b1307416e64726f69643110300e06035504031307416e64726f6964301e170d3038303832313233313333345a170d3336303130373233313333345a3074310b3009060355040613025553311330110603550408130a43616c69666f726e6961311630140603550407130d4d6f756e7461696e205669657731143012060355040a130b476f6f676c6520496e632e3110300e060355040b1307416e64726f69643110300e06035504031307416e64726f696430820120300d06092a864886f70d01010105000382010d00308201080282010100ab562e00d83ba208ae0a966f124e29da11f2ab56d08f58e2cca91303e9b754d372f640a71b1dcb130967624e4656a7776a92193db2e5bfb724a91e77188b0e6a47a43b33d9609b77183145ccdf7b2e586674c9e1565b1f4c6a5955bff251a63dabf9c55c27222252e875e4f8154a645f897168c0b1bfc612eabf785769bb34aa7984dc7e2ea2764cae8307d8c17154d7ee5f64a51a44a602c249054157dc02cd5f5c0e55fbef8519fbe327f0b1511692c5a06f19d18385f5c4dbc2d6b93f68cc2979c70e18ab93866b3bd5db8999552a0e3b4c99df58fb918bedc182ba35e003c1b4b10dd244a8ee24fffd333872ab5221985edab0fc0d0b145b6aa192858e79020103a381d93081d6301d0603551d0e04160414c77d8cc2211756259a7fd382df6be398e4d786a53081a60603551d2304819e30819b8014c77d8cc2211756259a7fd382df6be398e4d786a5a178a4763074310b3009060355040613025553311330110603550408130a43616c69666f726e6961311630140603550407130d4d6f756e7461696e205669657731143012060355040a130b476f6f676c6520496e632e3110300e060355040b1307416e64726f69643110300e06035504031307416e64726f6964820900c2e08746644a308d300c0603551d13040530030101ff300d06092a864886f70d010104050003820101006dd252ceef85302c360aaace939bcff2cca904bb5d7a1661f8ae46b2994204d0ff4a68c7ed1a531ec4595a623ce60763b167297a7ae35712c407f208f0cb109429124d7b106219c084ca3eb3f9ad5fb871ef92269a8be28bf16d44c8d9a08e6cb2f005bb3fe2cb96447e868e731076ad45b33f6009ea19c161e62641aa99271dfd5228c5c587875ddb7f452758d661f6cc0cccb7352e424cc4365c523532f7325137593c4ae341f4db41edda0d0b1071a7c440f0fe9ea01cb627ca674369d084bd2fd911ff06cdbf2cfa10dc0f893ae35762919048c7efc64c7144178342f70581c9de573af55b390dd7fdb9418631895d5f759f30112687ff621410c069308a");
        a2 = xie.i(1, "gads:msa:experiments:incapi:debug_cert", "308204a830820390a003020102020900d585b86c7dd34ef5300d06092a864886f70d0101040500308194310b3009060355040613025553311330110603550408130a43616c69666f726e6961311630140603550407130d4d6f756e7461696e20566965773110300e060355040a1307416e64726f69643110300e060355040b1307416e64726f69643110300e06035504031307416e64726f69643122302006092a864886f70d0109011613616e64726f696440616e64726f69642e636f6d301e170d3038303431353233333635365a170d3335303930313233333635365a308194310b3009060355040613025553311330110603550408130a43616c69666f726e6961311630140603550407130d4d6f756e7461696e20566965773110300e060355040a1307416e64726f69643110300e060355040b1307416e64726f69643110300e06035504031307416e64726f69643122302006092a864886f70d0109011613616e64726f696440616e64726f69642e636f6d30820120300d06092a864886f70d01010105000382010d00308201080282010100d6ce2e080abfe2314dd18db3cfd3185cb43d33fa0c74e1bdb6d1db8913f62c5c39df56f846813d65bec0f3ca426b07c5a8ed5a3990c167e76bc999b927894b8f0b22001994a92915e572c56d2a301ba36fc5fc113ad6cb9e7435a16d23ab7dfaeee165e4df1f0a8dbda70a869d516c4e9d051196ca7c0c557f175bc375f948c56aae86089ba44f8aa6a4dd9a7dbf2c0a352282ad06b8cc185eb15579eef86d080b1d6189c0f9af98b1c2ebd107ea45abdb68a3c7838a5e5488c76c53d40b121de7bbd30e620c188ae1aa61dbbc87dd3c645f2f55f3d4c375ec4070a93f7151d83670c16a971abe5ef2d11890e1b8aef3298cf066bf9e6ce144ac9ae86d1c1b0f020103a381fc3081f9301d0603551d0e041604148d1cc5be954c433c61863a15b04cbc03f24fe0b23081c90603551d230481c13081be80148d1cc5be954c433c61863a15b04cbc03f24fe0b2a1819aa48197308194310b3009060355040613025553311330110603550408130a43616c69666f726e6961311630140603550407130d4d6f756e7461696e20566965773110300e060355040a1307416e64726f69643110300e060355040b1307416e64726f69643110300e06035504031307416e64726f69643122302006092a864886f70d0109011613616e64726f696440616e64726f69642e636f6d820900d585b86c7dd34ef5300c0603551d13040530030101ff300d06092a864886f70d0101040500038201010019d30cf105fb78923f4c0d7dd223233d40967acfce00081d5bd7c6e9d6ed206b0e11209506416ca244939913d26b4aa0e0f524cad2bb5c6e4ca1016a15916ea1ec5dc95a5e3a010036f49248d5109bbf2e1e618186673a3be56daf0b77b1c229e3c255e3e84c905d2387efba09cbf13b202b4e5a22c93263484a23d2fc29fa9f1939759733afd8aa160f4296c2d0163e8182859c6643e9c1962fa0c18333335bc090ff9a6b22ded1ad444229a539a94eefadabd065ced24b3e51e5dd7b66787bef12fe97fba484c423fb4ff8cc494c02f0f5051612ff6529393e8e46eac5bb21f277c151aa5f2aa627d1e89da70ab6033569de3b9897bfff7ca9da3e1243f60b");
        b2 = xie.h(1, "gads:gestures:clearTd:enabled", bool2);
        c2 = lse.b;
        d2 = xie.h(1, "gads:gestures:errorlogging:enabled", bool2);
        e2 = xie.g(1, "gads:gestures:task_timeout", 2000L);
        f2 = xie.h(1, "gads:gestures:asig:enabled", bool2);
        g2 = xie.h(1, "gads:gestures:ans:enabled", bool2);
        h2 = xie.h(1, "gads:gestures:tos:enabled", bool2);
        i2 = xie.h(1, "gads:gestures:imd:enabled", bool2);
        j2 = xie.h(1, "gads:gestures:brt:enabled", bool);
        k2 = xie.h(1, "gads:gestures:fpi:enabled", bool2);
        l2 = xie.h(1, "gads:signal:app_permissions:disabled", bool2);
        m2 = xie.h(1, "gads:signal:app_set_id_info_in_ad_request:enabled", bool2);
        n2 = xie.h(1, "gads:signal:app_set_id_info_signal_latency_fix:enabled", bool2);
        o2 = xie.h(1, "gads:app_set_id_info_signal:timeout:enabled", bool2);
        p2 = xie.g(1, "gads:app_set_id_info_signal:timeout:millis", 2000L);
        q2 = xie.h(1, "gads:caching_app_set_id_info:enabled", bool2);
        r2 = xie.h(1, "gads:signal:app_set_id_info_under_gmscore:enabled", bool2);
        s2 = xie.h(1, "gads:signal:app_set_id_info_for_scar:enabled", bool);
        t2 = xie.h(1, "gads:signal:ad_id_permission_signal:enabled", bool2);
        u2 = xie.h(1, "gads:gestures:hpk:enabled", bool);
        v2 = xie.i(1, "gads:gestures:pk", "");
        w2 = xie.h(1, "gads:gestures:bs:enabled", bool);
        x2 = xie.h(1, "gads:gestures:check_initialization_thread:enabled", bool2);
        y2 = xie.h(1, "gads:gestures:init_new_thread:enabled", bool);
        z2 = xie.h(1, "gads:gestures:pds:enabled", bool);
        A2 = xie.f(1, "gads:gestures:as2percentage", 0);
        B2 = xie.h(1, "gads:gestures:ns:enabled", bool);
        C2 = xie.h(1, "gads:gestures:vtm:enabled", bool2);
        D2 = xie.h(1, "gads:gestures:vdd:enabled", bool2);
        E2 = xie.h(1, "gads:gestures:asvs:enabled", bool2);
        F2 = xie.h(1, "gads:gadsignalsdelegate_ui_thread_fix:enabled", bool2);
        G2 = xie.h(1, "gads:native:asset_view_touch_events", bool2);
        H2 = xie.h(1, "gads:native:set_touch_listener_on_asset_views", bool);
        I2 = xie.h(1, "gads:ais:enabled", bool);
        J2 = xie.h(1, "gads:rewarded:ssv_options_holder_holder:enabled", bool2);
        K2 = xie.h(1, "gads:stav:enabled", bool2);
        L2 = xie.h(1, "gads:spam:impression_ui_idle:enable", bool2);
        M2 = xie.f(1, "gads:gass:impression_retry:count", 0);
        N2 = xie.f(1, "gads:gass:impression_retry:delay_ms", WindowState.NORMAL);
        O2 = xie.j(1, "gads:sdk_core_constants:experiment_id");
        P2 = xie.i(1, "gads:sdk_core_constants:caps", "");
        Q2 = xie.h(1, "gads:js_flags:disable_phenotype", bool2);
        R2 = xie.i(1, "gads:native:engine_url_with_protocol", "https://googleads.g.doubleclick.net/mads/static/mad/sdk/native/native_ads.html");
        S2 = xie.i(1, "gads:native:video_url_with_protocol", "https://imasdk.googleapis.com/admob/sdkloader/native_video.html");
        T2 = xie.h(1, "gads:native:get_native_ad_view_signals", bool2);
        U2 = xie.f(1, "gads:native_video_load_timeout", 10);
        V2 = xie.i(1, "gads:ad_choices_content_description", "Ad Choices Icon");
        W2 = xie.h(1, "gads:enable_singleton_broadcast_receiver", bool2);
        X2 = xie.h(1, "gads:native:media_view_match_parent:enabled", bool);
        Y2 = xie.h(1, "gads:video:restrict_inside_web_view:enabled", bool2);
        Z2 = xie.h(1, "gads:native:count_impression_for_assets", bool2);
        a3 = xie.h(1, "gads:native:count_impression_on_mediaview_first_visible", bool2);
        b3 = xie.h(1, "gads:native:count_impression_on_mediaview_entirely_visible", bool2);
        c3 = xie.h(1, "gads:native:enable_enigma_watermarking", bool2);
        d3 = xie.h(1, "gads:fluid_ad:use_wrap_content_height", bool2);
        e3 = xie.h(1, "gads:rtb_v1_1:fetch_app_settings_using_cld:enabled", bool);
        f3 = xie.h(1, "gads:get_request_signals_cld:enabled", bool);
        g3 = xie.h(1, "gads:get_request_signals_common_cld:enabled", bool);
        h3 = xie.h(1, "gads:rtb_v1_1:use_manifest_appid_cld:enabled", bool);
        i3 = xie.g(1, "gads:fetch_app_settings_using_cld:refresh_interval_ms", 7200000L);
        j3 = xie.g(1, "gads:parental_controls:timeout", 2000L);
        k3 = xie.f(1, "gads:cache:ad_request_timeout_millis", 250);
        l3 = xie.f(1, "gads:cache:max_concurrent_downloads", 10);
        m3 = xie.h(1, "gads:cache:downloader_use_high_priority", bool2);
        n3 = xie.g(1, "gads:cache:javascript_timeout_millis", BackgroundActivityBehavior.MIN_BACKGROUND_ACTIVITY_DURATION_DEFAULT);
        o3 = xie.h(1, "gads:cache:bind_on_foreground", bool2);
        p3 = xie.h(1, "gads:cache:bind_on_init", bool2);
        q3 = xie.h(1, "gads:cache:bind_on_request", bool2);
        r3 = xie.g(1, "gads:cache:bind_on_request_keep_alive", TimeUnit.SECONDS.toMillis(30L));
        s3 = xie.h(1, "gads:cache:unbind_on_bg_thread", bool2);
        t3 = xie.h(1, "gads:cache:use_cache_data_source", bool2);
        u3 = xie.h(1, "gads:cache:connection_per_read", bool2);
        v3 = xie.g(1, "gads:cache:connection_timeout", BackgroundActivityBehavior.MIN_BACKGROUND_ACTIVITY_DURATION_DEFAULT);
        w3 = xie.g(1, "gads:cache:read_only_connection_timeout", BackgroundActivityBehavior.MIN_BACKGROUND_ACTIVITY_DURATION_DEFAULT);
        x3 = xie.h(1, "gads:cache:read_inner_data_source_if_gcache_miss", bool2);
        y3 = xie.h(1, "gads:cache:read_inner_data_source_if_gcache_not_downloaded", bool2);
        z3 = xie.h(1, "gads:cache:function_call_timeout_v1:enabled", bool2);
        A3 = xie.g(1, "gads:cache:function_call_timeout", BackgroundActivityBehavior.MIN_BACKGROUND_ACTIVITY_DURATION_DEFAULT);
        B3 = xie.h(1, "gads:cache:add_itag_to_cache_key:enabled", bool);
        C3 = xie.h(1, "gads:http_assets_cache:enabled", bool2);
        D3 = xie.i(1, "gads:http_assets_cache:regex", "(?i)https:\\/\\/(tpc\\.googlesyndication\\.com\\/(.*)|lh\\d+\\.googleusercontent\\.com\\/(.*))");
        E3 = xie.f(1, "gads:http_assets_cache:time_out", 100);
        F3 = xie.h(1, "gads:chrome_custom_tabs_browser:enabled", bool2);
        G3 = xie.h(1, "gads:chrome_custom_tabs:disabled", bool2);
        H3 = xie.h(1, "gads:chrome_custom_tabs_browser_v2:enabled", bool2);
        I3 = xie.h(1, "gads:cct_v2_connection:enabled", bool2);
        J3 = xie.h(1, "gads:cct_v2_direct_launch:enabled", bool2);
        K3 = xie.h(1, "gads:chrome_custom_tabs_for_native_ads:enabled", bool2);
        L3 = xie.h(1, "gad:cct_v2_beta:enabled", bool2);
        M3 = xie.i(1, "gad:publisher_testing:cct_v2:enabled_list", "");
        N3 = xie.h(2, "CHROME_CUSTOM_TAB_OPT_OUT", bool2);
        O3 = xie.g(1, "gads:debug_hold_gesture:time_millis", 2000L);
        P3 = xie.i(1, "gads:drx_debug:debug_device_linking_url", "https://www.google.com/dfp/linkDevice");
        Q3 = xie.i(1, "gads:drx_debug:in_app_preview_status_url", "https://www.google.com/dfp/inAppPreview");
        R3 = xie.i(1, "gads:drx_debug:debug_signal_status_url", "https://www.google.com/dfp/debugSignals");
        S3 = xie.i(1, "gads:drx_debug:send_debug_data_url", "https://www.google.com/dfp/sendDebugData");
        T3 = xie.f(1, "gads:drx_debug:timeout_ms", CrashReportManager.TIME_WINDOW);
        U3 = xie.f(1, "gad:pixel_dp_comparision_multiplier", 1);
        V3 = xie.h(1, "gad:interstitial_notify_publisher_without_delay", bool2);
        W3 = xie.h(1, "gad:interstitial_for_multi_window", bool2);
        X3 = xie.h(1, "gad:interstitial_ad_stay_active_in_multi_window", bool2);
        Y3 = xie.h(1, "gad:interstitial_multi_window_method", bool2);
        Z3 = xie.f(1, "gad:interstitial:close_button_padding_dip", 0);
        a4 = xie.h(1, "gads:clearcut_logging:enabled", bool2);
        b4 = xie.h(1, "gads:clearcut_logging:write_to_file", bool2);
        c4 = xie.h(1, "gad:publisher_testing:force_local_request:enabled", bool);
        d4 = xie.i(1, "gad:publisher_testing:force_local_request:enabled_list", "");
        e4 = xie.i(1, "gad:publisher_testing:force_local_request:disabled_list", "");
        f4 = xie.f(1, "gad:http_redirect_max_count:times", 8);
        g4 = xie.h(1, "gads:omid:enabled", bool);
        h4 = xie.f(1, "gads:omid:destroy_webview_delay", NetworkBehavior.DEFAULT_NETWORK_CALL_LIMIT);
        i4 = xie.h(1, "gads:omid_use_admob_impl_dependency:enabled", bool);
        j4 = xie.h(1, "gads:omid_use_base_64_encoding_for_native_html:enabled", bool);
        k4 = xie.h(1, "gads:omid_use_media_type_for_native:enabled", bool2);
        l4 = xie.h(1, "gads:omid_use_impression_listener_full_screen:enabled", bool2);
        m4 = xie.h(1, "gads:nonagon:banner:enabled", bool);
        n4 = xie.i(1, "gads:nonagon:banner:ad_unit_exclusions", "(?!)");
        o4 = xie.h(1, "gads:nonagon:app_open:enabled", bool);
        p4 = xie.f(1, "gads:app_open_beta:min_version", Year.MAX_VALUE);
        q4 = xie.f(1, "gads:app_open_ad_open_beta_api:min_version", 202490999);
        r4 = xie.h(1, "gads:nonagon:app_open_app_switch_signal:enabled", bool2);
        s4 = xie.i(1, "gads:nonagon:app_open:ad_unit_exclusions", "(?!)");
        t4 = xie.h(1, "gads:nonagon:app_open_ad_show_emitter:enabled", bool2);
        u4 = xie.h(1, "gads:nonagon:interstitial:enabled", bool);
        v4 = xie.i(1, "gads:nonagon:interstitial:ad_unit_exclusions", "(?!)");
        w4 = xie.h(1, "gads:nonagon:rewardedvideo:enabled", bool);
        x4 = xie.h(1, "gads:nonagon:mobile_ads_setting_manager:enabled", bool);
        y4 = xie.i(1, "gads:nonagon:rewardedvideo:ad_unit_exclusions", "(?!)");
        z4 = xie.h(1, "gads:nonagon:banner:check_dp_size", bool);
        A4 = xie.h(1, "gads:nonagon:rewarded:load_multiple_ads", bool);
        B4 = xie.h(1, "gads:nonagon:return_no_fill_error_code", bool2);
        C4 = xie.h(1, "gads:nonagon:continue_on_no_fill", bool2);
        D4 = xie.h(1, "gads:nonagon:separate_timeout:enabled", bool);
        E4 = xie.f(1, "gads:nonagon:request_timeout:seconds", 60);
        F4 = xie.h(1, "gads:nonagon:banner_recursive_renderer", bool2);
        G4 = xie.h(1, "gads:nonagon:app_stats_lock:enabled", bool2);
        H4 = xie.h(1, "gads:nonagon:app_stats_main_thread:enabled", bool2);
        I4 = xie.h(1, "gads:uri_query_to_map_bg_thread:enabled", bool2);
        J4 = xie.i(1, "gads:uri_query_to_map_bg_thread:types", "/result");
        K4 = xie.f(1, "gads:uri_query_to_map_bg_thread:min_length", NetworkBehavior.DEFAULT_NETWORK_CALL_LIMIT);
        L4 = xie.h(1, "gads:nonagon:active_view_gmsg_background_thread:enabled", bool);
        M4 = xie.h(1, "gads:active_view_gmsg_separate_pool:enabled", bool);
        N4 = xie.h(1, "gads:active_view_audio_signal_audio_mode:enabled", bool2);
        O4 = xie.h(1, "gads:signals:ad_id_info:enabled", bool2);
        P4 = xie.h(1, "gads:signals:app_index:enabled", bool2);
        Q4 = xie.h(1, "gads:signals:attestation_token:enabled", bool2);
        R4 = xie.h(1, "gads:signals:cache:enabled", bool2);
        S4 = xie.h(1, "gads:signals:doritos:enabled", bool2);
        T4 = xie.h(1, "gads:signals:doritos:v1:enabled", bool2);
        U4 = xie.h(1, "gads:signals:doritos:v2:immediate:enabled", bool2);
        V4 = xie.h(1, "gads:signals:parental_control:enabled", bool2);
        W4 = xie.h(1, "gads:signals:video_decoder:enabled", bool2);
        X4 = xie.h(1, "gads:signals:banner_hardware_acceleration:enabled", bool2);
        Y4 = xie.h(1, "gads:signals:native_hardware_acceleration:enabled", bool2);
        Z4 = xie.h(1, "gads:attestation_token:enabled", bool2);
        a5 = xie.g(1, "gads:mobius_linking:sdk_side_cooldown_time_threshold:ms", AbraPackageKt.MS_IN_HOUR);
        b5 = xie.f(1, "gads:adoverlay:b68684796:targeting_sdk:lower_bound", 27);
        c5 = xie.f(1, "gads:adoverlay:b68684796:targeting_sdk:upper_bound", 26);
        d5 = xie.f(1, "gads:adoverlay:b68684796:sdk_int:lower_bound", 27);
        e5 = xie.f(1, "gads:adoverlay:b68684796:sdk_int:upper_bound", 26);
        f5 = xie.h(1, "gads:consent:shared_preference_reading:enabled", bool);
        g5 = xie.h(1, "gads:consent:iab_consent_info:enabled", bool);
        h5 = xie.h(1, "gads:fc_consent:shared_preference_reading:enabled", bool);
        i5 = xie.i(1, "gads:sp:json_string", "");
        j5 = xie.h(1, "gads:nativeads:image:sample:enabled", bool);
        k5 = xie.f(1, "gads:nativeads:image:sample:pixels", Constants.MB);
        l5 = xie.h(1, "gads:nativeads:pub_image_scale_type:enabled", bool);
        m5 = xie.h(1, "gads:offline_signaling:enabled", bool2);
        n5 = xie.f(1, "gads:offline_signaling:log_maximum", 100);
        o5 = xie.h(1, "gads:nativeads:template_signal:enabled", bool);
        p5 = xie.h(1, "gads:nativeads:media_content_aspect_ratio:enabled", bool);
        q5 = xie.h(1, "gads:nativeads:media_content_metadata:enabled", bool);
        r5 = xie.h(1, "gads:buffer_click_url_as_ready_to_ping:enabled", bool2);
        s5 = xie.h(1, "gads:predictive_prefetch_from_cld:enabled", bool2);
        t5 = xie.h(1, "gads:cache_layer_from_cld:enabled", bool2);
        u5 = xie.h(1, "gads:cache_layer_wait_for_app_settings:enabled", bool2);
        v5 = xie.h(1, "gads:precache_pool:verbose_logging", bool2);
        w5 = xie.f(1, "gads:rewarded_precache_pool:count", 0);
        x5 = xie.f(1, "gads:interstitial_precache_pool:count", 0);
        y5 = xie.i(1, "gads:rewarded_precache_pool:discard_strategy", "lru");
        z5 = xie.i(1, "gads:interstitial_precache_pool:discard_strategy", "lru");
        A5 = xie.i(1, "gads:rewarded_precache_pool:cache_start_trigger", "onAdClosed");
        B5 = xie.i(1, "gads:interstitial_precache_pool:cache_start_trigger", "onAdClosed");
        C5 = xie.f(1, "gads:rewarded_precache_pool:size", 1);
        D5 = xie.f(1, "gads:interstitial_precache_pool:size", 1);
        E5 = xie.f(1, "gads:rewarded_precache_pool:ad_time_limit", 1200);
        F5 = xie.f(1, "gads:interstitial_precache_pool:ad_time_limit", 1200);
        G5 = xie.i(1, "gads:rewarded_precache_pool:schema", "customTargeting,npa,tagForChildDirectedTreatment,tagForUnderAgeOfConsent,maxAdContentRating");
        H5 = xie.i(1, "gads:interstitial_precache_pool:schema", "customTargeting,npa,tagForChildDirectedTreatment,tagForUnderAgeOfConsent,maxAdContentRating");
        I5 = xie.i(1, "gads:app_open_precache_pool:schema", "orientation,npa,tagForChildDirectedTreatment,tagForUnderAgeOfConsent,maxAdContentRating");
        J5 = xie.i(1, "gads:app_open_precache_pool:discard_strategy", "oldest");
        K5 = xie.f(1, "gads:app_open_precache_pool:count", 0);
        L5 = xie.i(1, "gads:app_open_precache_pool:cache_start_trigger", "onAdClosed");
        M5 = xie.f(1, "gads:app_open_precache_pool:size", 1);
        N5 = xie.f(1, "gads:app_open_precache_pool:ad_time_limit", 14400);
        O5 = xie.h(1, "gads:memory_leak:b129558083", bool2);
        P5 = xie.h(1, "gads:unhandled_event_reporting:enabled", bool2);
        Q5 = xie.h(1, "gads:response_info:enabled", bool);
        R5 = xie.h(1, "gads:ad_source_response_info:enabled", bool);
        S5 = xie.h(1, "gads:loaded_adapter_response_response_info:enabled", bool);
        T5 = xie.h(1, "gads:response_info_extras:enabled", bool);
        U5 = xie.h(1, "gads:csi:interstitial_failed_to_show:enabled", bool2);
        V5 = xie.h(1, "gads:csi:mediation_failure:enabled", bool2);
        W5 = xie.i(1, "gads:csi:error_parsing:regex", "^(\\d+)");
        X5 = xie.h(1, "gads:csi:eids_from_cld:enabled", bool2);
        Y5 = xie.h(1, "gads:request_id_check:enabled", bool2);
        Z5 = xie.h(1, "gads:request_id_int32:enabled", bool);
        a6 = xie.h(1, "gads:render_decouple:enabled", bool);
        b6 = xie.f(1, "gads:maximum_query_json_cache_size", 200);
        c6 = xie.g(1, "gads:timeout_query_json_cache:millis", AbraPackageKt.MS_IN_HOUR);
        d6 = xie.h(1, "gads:scar_csi:enabled", bool);
        e6 = xie.h(1, "gads:scar_csi_sampling:enabled", bool2);
        f6 = xie.h(1, "gads:query_map_eviction_fullinfo:enabled", bool2);
        g6 = xie.h(1, "gads:query_map_update_bg_thread:enabled", bool2);
        h6 = xie.h(1, "gads:query_map_eviction_ping:enabled", bool2);
        i6 = xie.h(1, "gads:scar_signal_comparison_experiment:enabled", bool2);
        j6 = xie.h(1, "gads:scar_signal_comparison_format:unknown", bool2);
        k6 = xie.g(1, "gads:timeout_signal_collection_in_exp:millis", 1000L);
        l6 = xie.h(1, "gads:scar_trustless_token_for_gbid:enabled", bool2);
        m6 = xie.h(1, "gads:disable_token_under_idless:enabled", bool2);
        n6 = xie.h(1, "gads:scar_encryption_key_for_gbid:enabled", bool2);
        o6 = xie.h(1, "gads:scar_decrypt_csi_for_gbid:enabled", bool2);
        p6 = xie.h(1, "gads:scar_v2:send_click_ping:enabled", bool2);
        q6 = xie.h(1, "gads:scar_v2:send_impression_pings:enabled", bool2);
        r6 = xie.h(1, "gads:scar_v2:user_agent:enabled", bool2);
        s6 = xie.i(1, "gads:scar_v2:user_agent:key", "ua");
        t6 = xie.h(1, "gads:scar_v2:prior_click_count:enabled", bool2);
        u6 = xie.i(1, "gads:scar_v2:prior_click_count:key", "pcc");
        v6 = xie.i(1, "gads:scar_v2:pings_from_gma:key", "is_gma");
        w6 = xie.h(1, "gads:scar:use_flag_regexes:enabled", bool);
        x6 = xie.i(1, "gads:scar:google_click_paths", "/aclk,/pcs/click,/dbm/clk");
        y6 = xie.i(1, "gads:scar:google_click_domain_suffixes", ".doubleclick.net,.googleadservices.com");
        z6 = xie.i(1, "gads:scar:google_view_paths", "/pagead/adview,/pcs/view,/pagead/conversion,/dbm/ad");
        A6 = xie.i(1, "gads:scar:google_view_domain_suffixes", ".doubleclick.net,.googleadservices.com,.googlesyndication.com");
        B6 = xie.h(1, "gads:scar:ping_non_google_urls:enabled", bool2);
        C6 = xie.h(1, "gads:scar_format_fix:enabled", bool2);
        D6 = xie.h(1, "gads:scar_csi_v47:enabled", bool2);
        E6 = xie.h(1, "gads:scar_csi_format_fix:enabled", bool2);
        F6 = xie.h(1, "gads:signal_collection_without_rendering:enabled", bool);
        G6 = xie.f(1, "gads:native_ads_signal:timeout", NetworkBehavior.DEFAULT_NETWORK_CALL_LIMIT);
        H6 = xie.h(2, "DISABLE_CRASH_REPORTING", bool2);
        I6 = xie.h(1, "gads:paid_event_listener:enabled", bool);
        J6 = xie.h(1, "gads:interscroller_ad:enabled", bool);
        K6 = xie.h(1, "gads:interscroller_ad:refresh:enabled", bool2);
        L6 = xie.f(1, "gads:interscroller:min_width", ContentFeedType.OTHER);
        M6 = xie.f(1, "gads:interscroller:min_height", 250);
        N6 = xie.h(1, "gads:is_in_scroll_view_new_api:enabled", bool);
        O6 = xie.h(1, "gads:nas_collect_mediaview_matrix:enabled", bool2);
        P6 = xie.h(1, "gads:nas_collect_layout_params:enabled", bool2);
        Q6 = xie.h(1, "gads:policy_validator_for_all_pubs:enabled", bool);
        R6 = xie.i(1, "gad:publisher_testing:policy_validator:enabled_list", "");
        S6 = xie.f(1, "gads:policy_validator_layoutparam:flags", ContentDeliveryAdvertisementCapability.LINEAR_5DAY);
        T6 = xie.h(2, "NATIVE_AD_DEBUGGER_ENABLED", bool);
        U6 = xie.f(1, "gads:policy_validator_overlay_width:dp", 350);
        V6 = xie.f(1, "gads:policy_validator_overlay_height:dp", 140);
        W6 = xie.h(1, "gads:use_wide_viewport:enabled", bool2);
        X6 = xie.h(1, "gads:load_with_overview_mode:enabled", bool2);
        Y6 = xie.h(1, "gads:wire_banner_listener_after_request:enabled", bool2);
        Z6 = xie.h(1, "gads:wire_app_open_listener_after_request:enabled", bool2);
        a7 = xie.h(1, "gads:wire_interstitial_listener_after_request:enabled", bool2);
        b7 = xie.i(1, "gads:server_transaction_source:list", "Network");
        c7 = xie.h(1, "gads:can_open_app_and_open_app_action:enabled", bool2);
        d7 = xie.h(1, "gads:open_gmsg:set_uri_data_and_type:enabled", bool2);
        e7 = xie.f(1, "gads:ad_error_api:min_version", 202006000);
        f7 = xie.h(1, "gads:forward_bow_error_string:enabled", bool);
        g7 = xie.h(1, "gads:continue_on_process_response:enabled", bool2);
        h7 = xie.f(1, "gads:mediation_no_fill_error:min_version", Year.MAX_VALUE);
        i7 = xie.h(1, "gads:line_item_no_fill_conversion:enabled", bool2);
        j7 = xie.f(1, "gads:offline_database_version:version", 1);
        k7 = xie.h(1, "gads:offline_ads_notification:enabled", bool);
        l7 = xie.h(1, "gads:use_new_network_api:enabled", bool);
        m7 = xie.h(1, "gads:handle_click_recorded_event:enabled", bool2);
        n7 = xie.h(1, "gads:default_network_type_fine_to_unknown:enabled", bool);
        o7 = xie.h(1, "gads:handle_intent_async:enabled", bool);
        p7 = xie.h(1, "gads:skip_deep_link_validation_native_ads:enabled", bool);
        q7 = xie.h(1, "gads:try_deep_link_fallback_native_ads:enabled", bool);
        r7 = xie.h(1, "gads:in_app_link_handling_for_android_11_enabled:enabled", bool);
        s7 = xie.h(1, "gads:new_remote_logging_utils:enabled", bool2);
        t7 = xie.h(1, "gads:remote_logging:enabled", bool2);
        u7 = xie.f(1, "gads:remote_log_send_rate_ms", 60000);
        v7 = xie.f(1, "gads:remote_log_queue_max_entries", 500);
        w7 = xie.i(1, "gads:remote_capture_service_url", "https://pagead2.googlesyndication.com/pagead/ping?e=2&f=1");
        x7 = xie.f(1, "gads:cui_monitoring_interval_ms", 300000);
        y7 = xie.f(1, "gads:cui_buffer_size", NetworkBehavior.DEFAULT_NETWORK_CALL_LIMIT);
        z7 = xie.f(1, "gads:cuj_automatic_flush_delay_ms", LogLevel.NONE);
        A7 = xie.i(1, "gads:plugin_regex", "^Flutter-GMA-.*|^unity-.*");
        B7 = xie.f(1, "gads:app_event_queue_size", 20);
        C7 = xie.h(1, "gads:hide_grey_title_bar:enabled", bool2);
        D7 = xie.h(1, "gads:interstitial_ad_parameter_handler:enabled", bool);
        E7 = xie.h(1, "gads:inspector:enabled", bool);
        F7 = xie.i(1, "gads:inspector:ui_url", "https://admob-gmats.uc.r.appspot.com/");
        G7 = xie.f(1, "gads:inspector:max_ad_life_cycles", NetworkBehavior.DEFAULT_NETWORK_CALL_LIMIT);
        H7 = xie.f(1, "gads:inspector:ui_invocation_millis", 2000);
        I7 = xie.h(1, "gads:inspector:shake_enabled", bool);
        J7 = xie.e(1, "gads:inspector:shake_strength", 2.0f);
        K7 = xie.f(1, "gads:inspector:shake_interval", 500);
        L7 = xie.f(1, "gads:inspector:shake_reset_time_ms", 3000);
        M7 = xie.f(1, "gads:inspector:shake_count", 3);
        N7 = xie.h(1, "gads:inspector:flick_enabled", bool);
        O7 = xie.e(1, "gads:inspector:flick_rotation_threshold", 45.0f);
        P7 = xie.f(1, "gads:inspector:flick_reset_time_ms", 3000);
        Q7 = xie.f(1, "gads:inspector:flick_count", 2);
        R7 = xie.f(1, "gads:inspector:icon_width_px", JceEncryptionConstants.SYMMETRIC_KEY_LENGTH);
        S7 = xie.f(1, "gads:inspector:icon_height_px", JceEncryptionConstants.SYMMETRIC_KEY_LENGTH);
        T7 = xie.h(1, "gads:inspector:ad_manager_enabled", bool);
        U7 = xie.h(1, "gads:inspector:policy_violations_enabled", bool2);
        V7 = xie.h(1, "gads:inspector:bidding_data_enabled", bool);
        W7 = xie.h(1, "gads:inspector:credentials_enabled", bool);
        X7 = xie.h(1, "gads:inspector:export_request_logs_enabled", bool2);
        Y7 = xie.h(1, "gads:inspector:sdk_version_enabled", bool2);
        Z7 = xie.h(1, "gads:inspector:adapter_supports_init_enabled", bool2);
        a8 = xie.h(1, "gads:inspector:out_of_context_testing_enabled", bool2);
        b8 = xie.h(1, "gads:paw_register_webview:enabled", bool);
        c8 = xie.h(1, "gads:paw_webview_early_initialization:enabled", bool2);
        d8 = xie.f(1, "gads:max_timeout_view_click_ms", NetworkBehavior.DEFAULT_NETWORK_CALL_LIMIT);
        e8 = xie.h(1, "gads:as_view_click_latency_logging:enabled", bool2);
        f8 = xie.h(1, "gads:h5ads:enabled", bool);
        g8 = xie.f(1, "gads:h5ads:max_num_ad_objects", 10);
        h8 = xie.f(1, "gads:h5ads:max_gmsg_length", CrashReportManager.TIME_WINDOW);
        i8 = xie.i(1, "gads:h5ads:afma_prefix", "(window.AFMA_ReceiveMessage||function(msg,params){window.h5_iframe.contentWindow.postMessage({messageName:'receive_message_action',parameters:{messageName:msg,parameters:params}},'*');})");
        j8 = xie.h(1, "gads:native_html_video_asset:enabled", bool);
        k8 = xie.h(1, "gads:native_html_image_asset:enabled", bool);
        l8 = xie.h(1, "gads:leibniz:events:enabled", bool2);
        m8 = xie.h(1, "gads:msa:alphavis_enabled", bool2);
        n8 = xie.h(1, "gads:msa:adutilalphavis_enabled", bool2);
        o8 = xie.h(1, "gads:msa:nativealphavis_enabled", bool2);
        p8 = xie.f(1, "gads:msa:visminalpha", 90);
        q8 = xie.h(1, "gads:msa:vswfl", bool2);
        r8 = xie.h(1, "gads:msa:poslogger", bool2);
        s8 = xie.h(1, "gads:new_dynamite_module_method:enabled", bool2);
        t8 = xie.f(1, "gads:timeout_for_show_call_succeed:ms", 3000);
        u8 = xie.h(1, "gads:read_pub_callback_param_open_gmsg:enabled", bool);
        v8 = xie.h(1, "gads:read_pub_callback_param_click_gmsg:enabled", bool);
        w8 = xie.h(1, "gads:forward_physical_click_to_ad_listener:enabled", bool);
        x8 = xie.h(1, "gads:webview_destroy_workaround:enabled", bool);
        y8 = xie.h(1, "gads:appstate_getresource_fix:enabled", bool2);
        z8 = xie.h(1, "gads:convert_ad_unit_lower_case_rtb:enabled", bool2);
        A8 = xie.h(1, "gads:drx_ad_unit_regex_case_insensitive:enabled", bool2);
        B8 = xie.h(1, "gads:csi_ping_for_invalid_dynamite_flags_access:enabled", bool2);
        C8 = xie.h(1, "gads:gestures:paos:enabled", bool2);
        D8 = xie.h(1, "gads:normalized_device_volume:enabled", bool2);
        E8 = xie.h(1, "gads:register_receiver_options:enabled", bool);
        F8 = xie.h(1, "gads:bg_ad_key_signal_gen:enabled", bool2);
        G8 = xie.h(1, "gads:bg_clearcut_provider:enabled", bool2);
        H8 = xie.h(1, "gads:queryInfo_generate_bg:enabled", bool2);
        I8 = xie.h(1, "gads:bg_banner_resume:enabled", bool2);
        J8 = xie.h(1, "gads:bg_banner_destroy:enabled", bool2);
        K8 = xie.h(1, "gads:bg_banner_pause:enabled", bool2);
        L8 = xie.h(2, "OPTIMIZE_INITIALIZATION", bool2);
        M8 = xie.h(2, "OPTIMIZE_AD_LOADING", bool2);
        N8 = xie.f(1, "gads:v46_granular_version", 221080000);
        O8 = xie.f(1, "gads:v48_granular_version", 221909000);
        P8 = xie.h(1, "gads:manifest_flag_collection:enabled", bool2);
        Q8 = xie.h(1, "gads:bstar_csi:enabled", bool2);
        R8 = xie.h(1, "gads:bstar_signals:enabled", bool2);
        S8 = xie.h(1, "gads:full_screen_1px_open:enabled", bool2);
        T8 = xie.h(1, "gads:app_id_as_session_token:enabled", bool2);
        U8 = xie.h(1, "gads:lmd_overlay:enabled", bool2);
    }

    public static void a(final Context context) {
        hqe.a(new f8f() { // from class: doe
            @Override // defpackage.f8f
            public final Object zza() {
                Context context2 = context;
                xie xieVar = fpe.a;
                lee.c().e(context2);
                return null;
            }
        });
    }
}
